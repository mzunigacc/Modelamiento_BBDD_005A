------------------------------------------------------------------------
-- limpieza basica (ignora errores si no existen objetos)
------------------------------------------------------------------------
BEGIN EXECUTE IMMEDIATE 'DROP TABLE detalle_venta CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE venta CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE vendedor CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE empleado CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE producto CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE marca CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE categoria CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE formato CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE origen CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE proveedor CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE region CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE medio_pago CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE afp CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE salud CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE seq_salud'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE seq_empleado'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
COMMIT;

------------------------------------------------------------------------
-- tablas base y maestras
------------------------------------------------------------------------
CREATE TABLE region (
  id_region     NUMBER(2)     NOT NULL,
  nombre        VARCHAR2(50)  NOT NULL,
  CONSTRAINT region_pk PRIMARY KEY (id_region)
);

CREATE TABLE proveedor (
  id_proveedor  NUMBER(6)     NOT NULL,
  nombre        VARCHAR2(80)  NOT NULL,
  email         VARCHAR2(120),
  telefono      VARCHAR2(30),
  id_region     NUMBER(2)     NOT NULL,
  CONSTRAINT proveedor_pk PRIMARY KEY (id_proveedor),
  CONSTRAINT proveedor_fk_region FOREIGN KEY (id_region) REFERENCES region(id_region)
);

CREATE TABLE marca (
  id_marca      NUMBER(6)     NOT NULL,
  nombre        VARCHAR2(60)  NOT NULL,
  CONSTRAINT marca_pk PRIMARY KEY (id_marca)
);

CREATE TABLE categoria (
  id_categoria  NUMBER(6)     NOT NULL,
  nombre        VARCHAR2(60)  NOT NULL,
  CONSTRAINT categoria_pk PRIMARY KEY (id_categoria)
);

CREATE TABLE formato (
  id_formato    NUMBER(6)     NOT NULL,
  descripcion   VARCHAR2(60)  NOT NULL,
  CONSTRAINT formato_pk PRIMARY KEY (id_formato)
);

CREATE TABLE origen (
  id_origen     NUMBER(6)     NOT NULL,
  nombre        VARCHAR2(60)  NOT NULL,
  CONSTRAINT origen_pk PRIMARY KEY (id_origen)
);

CREATE TABLE producto (
  id_producto    NUMBER(8)     NOT NULL,
  nombre         VARCHAR2(100) NOT NULL,
  id_marca       NUMBER(6)     NOT NULL,
  id_categoria   NUMBER(6)     NOT NULL,
  id_formato     NUMBER(6)     NOT NULL,
  id_origen      NUMBER(6)     NOT NULL,
  precio_compra  NUMBER(12,2)  NOT NULL,
  precio_venta   NUMBER(12,2)  NOT NULL,
  stock          NUMBER(10)    NOT NULL,
  stock_minimo   NUMBER(10)    NOT NULL,
  CONSTRAINT producto_pk PRIMARY KEY (id_producto),
  CONSTRAINT producto_fk_marca     FOREIGN KEY (id_marca)    REFERENCES marca(id_marca),
  CONSTRAINT producto_fk_categoria FOREIGN KEY (id_categoria) REFERENCES categoria(id_categoria),
  CONSTRAINT producto_fk_formato   FOREIGN KEY (id_formato)  REFERENCES formato(id_formato),
  CONSTRAINT producto_fk_origen    FOREIGN KEY (id_origen)   REFERENCES origen(id_origen)
);

CREATE TABLE medio_pago (
  id_medio_pago NUMBER(4)    NOT NULL,
  nombre        VARCHAR2(40) NOT NULL,
  CONSTRAINT medio_pago_pk PRIMARY KEY (id_medio_pago)
);

CREATE TABLE afp (
  id_afp   NUMBER GENERATED BY DEFAULT AS IDENTITY
             (START WITH 210 INCREMENT BY 6) PRIMARY KEY,
  nombre   VARCHAR2(60) NOT NULL
);

CREATE TABLE salud (
  id_salud NUMBER       NOT NULL,
  nombre   VARCHAR2(60) NOT NULL,
  CONSTRAINT salud_pk PRIMARY KEY (id_salud)
);

CREATE TABLE empleado (
  id_empleado     NUMBER        NOT NULL,
  nombre          VARCHAR2(40)  NOT NULL,
  apellido_p      VARCHAR2(40)  NOT NULL,
  apellido_m      VARCHAR2(40),
  activo          CHAR(1)       DEFAULT 'S' NOT NULL,
  sueldo_base     NUMBER(12,2)  NOT NULL,
  bono_jefatura   NUMBER(12,2),
  id_afp          NUMBER        NOT NULL,
  id_salud        NUMBER        NOT NULL,
  CONSTRAINT empleado_pk PRIMARY KEY (id_empleado),
  CONSTRAINT empleado_fk_afp   FOREIGN KEY (id_afp)   REFERENCES afp(id_afp),
  CONSTRAINT empleado_fk_salud FOREIGN KEY (id_salud) REFERENCES salud(id_salud)
);

CREATE TABLE vendedor (
  id_vendedor     NUMBER        NOT NULL,
  id_empleado     NUMBER        NOT NULL,
  comision        NUMBER(5,3)   NOT NULL,
  CONSTRAINT vendedor_pk PRIMARY KEY (id_vendedor),
  CONSTRAINT vendedor_fk_empleado FOREIGN KEY (id_empleado) REFERENCES empleado(id_empleado),
  CONSTRAINT vendedor_un_empleado UNIQUE (id_empleado)
);

CREATE TABLE venta (
  id_venta        NUMBER GENERATED BY DEFAULT AS IDENTITY
                     (START WITH 5050 INCREMENT BY 3) PRIMARY KEY,
  fecha_venta     DATE          DEFAULT SYSDATE NOT NULL,
  id_vendedor     NUMBER        NOT NULL,
  id_medio_pago   NUMBER        NOT NULL,
  total           NUMBER(14,2),
  CONSTRAINT venta_fk_vendedor   FOREIGN KEY (id_vendedor)   REFERENCES vendedor(id_vendedor),
  CONSTRAINT venta_fk_medio_pago FOREIGN KEY (id_medio_pago) REFERENCES medio_pago(id_medio_pago)
);

CREATE TABLE detalle_venta (
  id_detalle     NUMBER         NOT NULL,
  id_venta       NUMBER         NOT NULL,
  id_producto    NUMBER         NOT NULL,
  cantidad       NUMBER(10)     NOT NULL,
  precio_unit    NUMBER(12,2)   NOT NULL,
  CONSTRAINT detalle_venta_pk PRIMARY KEY (id_detalle),
  CONSTRAINT detalle_venta_fk_venta    FOREIGN KEY (id_venta)    REFERENCES venta(id_venta),
  CONSTRAINT detalle_venta_fk_producto FOREIGN KEY (id_producto) REFERENCES producto(id_producto)
);

COMMIT;

------------------------------------------------------------------------
-- poblamiento de tablas maestras
------------------------------------------------------------------------

INSERT INTO region (id_region, nombre) VALUES (1, 'metropolitana');
INSERT INTO region (id_region, nombre) VALUES (2, 'valparaiso');
INSERT INTO region (id_region, nombre) VALUES (3, 'biobio');

INSERT INTO proveedor (id_proveedor, nombre, email, telefono, id_region)
VALUES (10, 'distribuidora los andes', 'contacto@losandes.cl', '+569 7158 2291', 1);
INSERT INTO proveedor (id_proveedor, nombre, email, telefono, id_region)
VALUES (20, 'proveedora pacifico sur', 'ventas@pacificosur.cl', '+569 9833 4475', 2);
INSERT INTO proveedor (id_proveedor, nombre, email, telefono, id_region)
VALUES (30, 'alimentaria cordillera', 'info@cordillera.cl', '+569 6421 3379', 3);

INSERT INTO marca (id_marca, nombre) VALUES (1, 'dos caballos');
INSERT INTO marca (id_marca, nombre) VALUES (2, 'watt s');
INSERT INTO marca (id_marca, nombre) VALUES (3, 'soprole');

INSERT INTO categoria (id_categoria, nombre) VALUES (1, 'bebidas');
INSERT INTO categoria (id_categoria, nombre) VALUES (2, 'lacteos');
INSERT INTO categoria (id_categoria, nombre) VALUES (3, 'snacks');

INSERT INTO formato (id_formato, descripcion) VALUES (1, 'botella 1l');
INSERT INTO formato (id_formato, descripcion) VALUES (2, 'pack 6 unidades');
INSERT INTO formato (id_formato, descripcion) VALUES (3, 'bolsa 500g');

INSERT INTO origen (id_origen, nombre) VALUES (1, 'nacional');
INSERT INTO origen (id_origen, nombre) VALUES (2, 'importado');

INSERT INTO afp (nombre) VALUES ('afp planvital');
INSERT INTO afp (nombre) VALUES ('afp uno');
INSERT INTO afp (nombre) VALUES ('afp modelo');

CREATE SEQUENCE seq_salud START WITH 2050 INCREMENT BY 10 NOCACHE;

INSERT INTO salud (id_salud, nombre) VALUES (seq_salud.NEXTVAL, 'fonasa');
INSERT INTO salud (id_salud, nombre) VALUES (seq_salud.NEXTVAL, 'isapre');
INSERT INTO salud (id_salud, nombre) VALUES (seq_salud.NEXTVAL, 'seguro laboral');
INSERT INTO salud (id_salud, nombre) VALUES (seq_salud.NEXTVAL, 'otro seguro');

COMMIT;

------------------------------------------------------------------------
-- productos coherentes con las marcas y categorias
------------------------------------------------------------------------

INSERT INTO producto (id_producto, nombre, id_marca, id_categoria, id_formato, id_origen,
                      precio_compra, precio_venta, stock, stock_minimo)
VALUES (100, 'bebida energetica dos caballos', 1, 1, 1, 1, 800, 1200, 50, 5);

INSERT INTO producto (id_producto, nombre, id_marca, id_categoria, id_formato, id_origen,
                      precio_compra, precio_venta, stock, stock_minimo)
VALUES (101, 'jugo watts durazno', 2, 1, 1, 1, 600, 950, 40, 6);

INSERT INTO producto (id_producto, nombre, id_marca, id_categoria, id_formato, id_origen,
                      precio_compra, precio_venta, stock, stock_minimo)
VALUES (102, 'yogurt soprole frutilla', 3, 2, 3, 1, 450, 700, 80, 10);

INSERT INTO producto (id_producto, nombre, id_marca, id_categoria, id_formato, id_origen,
                      precio_compra, precio_venta, stock, stock_minimo)
VALUES (103, 'galletas dos caballos avena', 1, 3, 3, 1, 700, 1100, 30, 4);

COMMIT;

------------------------------------------------------------------------
-- reglas de negocio
------------------------------------------------------------------------
ALTER TABLE empleado
  ADD CONSTRAINT ck_empleado_sueldo_min CHECK (sueldo_base >= 400000);

ALTER TABLE vendedor
  ADD CONSTRAINT ck_vendedor_comision CHECK (comision >= 0 AND comision <= 0.25);

ALTER TABLE producto
  ADD CONSTRAINT ck_producto_stock_min CHECK (stock_minimo >= 3);

ALTER TABLE proveedor
  ADD CONSTRAINT un_proveedor_email UNIQUE (email);

ALTER TABLE marca
  ADD CONSTRAINT un_marca_nombre UNIQUE (nombre);

ALTER TABLE detalle_venta
  ADD CONSTRAINT ck_detalle_cantidad_pos CHECK (cantidad > 0);

COMMIT;

------------------------------------------------------------------------
-- poblamiento de empleados, vendedores y ventas
------------------------------------------------------------------------
CREATE SEQUENCE seq_empleado START WITH 750 INCREMENT BY 3 NOCACHE;

------------------------------------------------------------------------
-- empleados (42 filas) usando seq_empleado; sueldo_base >= 400000
-- distribucion de afp: 210, 216, 222
-- distribucion de salud: 2050, 2060, 2070, 2080
------------------------------------------------------------------------

-- 1
INSERT INTO empleado (id_empleado,nombre,apellido_p,apellido_m,activo,sueldo_base,bono_jefatura,id_afp,id_salud)
VALUES (seq_empleado.NEXTVAL,'andres','perez','lopez','S',550000,50000,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud) FROM salud));

-- 2
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'marta','gomez','soto','S',800000,NULL,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud)+10 FROM salud));

-- 3
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'luis','ruiz','diaz','N',620000,40000,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud)+20 FROM salud));

-- 4
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'carla','rojas','miranda','S',570000,30000,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud)+30 FROM salud));

-- 5
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'jorge','diaz','pino','S',760000,NULL,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud) FROM salud));

-- 6
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'paula','sanhueza','campos','S',600000,25000,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud)+10 FROM salud));

-- 7
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'ricardo','muñoz','luna','N',420000,NULL,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud)+20 FROM salud));

-- 8
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'valentina','torres','ibarra','S',590000,20000,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud)+30 FROM salud));

-- 9
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'sebastian','cortes','vera','S',700000,35000,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud) FROM salud));

-- 10
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'camila','farias','araya','S',520000,NULL,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud)+10 FROM salud));

-- 11
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'diego','bravo','nunez','N',480000,15000,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud)+20 FROM salud));

-- 12
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'romina','aguilar','soto','S',610000,30000,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud)+30 FROM salud));

-- 13
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'felipe','bustos','orellana','S',780000,NULL,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud) FROM salud));

-- 14
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'constanza','navarro','mella','S',555000,18000,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud)+10 FROM salud));

-- 15
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'ignacio','contreras','pavez','N',400000,NULL,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud)+20 FROM salud));

-- 16
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'daniela','morales','jara','S',735000,32000,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud)+30 FROM salud));

-- 17
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'tomás','saez','figueroa','S',565000,NULL,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud) FROM salud));

-- 18
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'carolina','vargas','acevedo','S',600000,27000,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud)+10 FROM salud));

-- 19
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'benjamin','arancibia','parra','N',450000,NULL,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud)+20 FROM salud));

-- 20
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'barbara','yacoman','ramos','S',680000,34000,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud)+30 FROM salud));

-- 21
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'matias','herrera','carrasco','S',720000,21000,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud) FROM salud));

-- 22
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'pamela','olivares','munoz','S',540000,NULL,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud)+10 FROM salud));

-- 23
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'cristobal','quiroga','salas','N',500000,12000,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud)+20 FROM salud));

-- 24
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'camilo','rivas','loyola','S',630000,18000,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud)+30 FROM salud));

-- 25
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'javier','escobar','lira','S',790000,NULL,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud) FROM salud));

-- 26
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'alejandra','vidal','arias','S',560000,26000,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud)+10 FROM salud));

-- 27
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'francisco','carreno','mora','N',470000,NULL,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud)+20 FROM salud));

-- 28
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'karen','soto','reyes','S',600000,24000,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud)+30 FROM salud));

-- 29
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'pedro','acuna','toledo','S',575000,NULL,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud) FROM salud));

-- 30
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'nicolas','zamora','segura','S',610000,19000,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud)+10 FROM salud));

-- 31
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'marcela','catalan','montecinos','N',430000,NULL,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud)+20 FROM salud));

-- 32
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'rodrigo','fuentes','lara','S',740000,22000,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud)+30 FROM salud));

-- 33
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'elena','opazo','romero','S',660000,30000,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud) FROM salud));

-- 34
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'oscar','antunez','contreras','S',520000,NULL,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud)+10 FROM salud));

-- 35
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'susana','beltran','poblete','N',490000,10000,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud)+20 FROM salud));

-- 36
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'mauricio','lagos','valenzuela','S',700000,28000,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud)+30 FROM salud));

-- 37
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'isabel','cordero','torres','S',560000,NULL,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud) FROM salud));

-- 38
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'hector','espinoza','ramos','S',610000,15000,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud)+10 FROM salud));

-- 39
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'patricia','mendez','guerra','N',420000,NULL,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud)+20 FROM salud));

-- 40
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'alvaro','rivera','bugueño','S',600000,21000,(SELECT MIN(id_afp) FROM afp),(SELECT MIN(id_salud)+30 FROM salud));

-- 41
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'victoria','salazar','perez','S',780000,35000,(SELECT MIN(id_afp)+6 FROM afp),(SELECT MIN(id_salud) FROM salud));

-- 42
INSERT INTO empleado VALUES (seq_empleado.NEXTVAL,'gerardo','moreno','guzman','S',550000,NULL,(SELECT MIN(id_afp)+12 FROM afp),(SELECT MIN(id_salud)+10 FROM salud));

COMMIT;


INSERT INTO vendedor (id_vendedor, id_empleado, comision) VALUES (1, 750, 0.10);
INSERT INTO vendedor (id_vendedor, id_empleado, comision) VALUES (2, 753, 0.15);

INSERT INTO medio_pago (id_medio_pago, nombre) VALUES (1, 'efectivo');
INSERT INTO medio_pago (id_medio_pago, nombre) VALUES (2, 'debito');
INSERT INTO medio_pago (id_medio_pago, nombre) VALUES (3, 'credito');

INSERT INTO venta (id_vendedor, id_medio_pago, total)
VALUES (1, 1, NULL);

INSERT INTO detalle_venta (id_detalle, id_venta, id_producto, cantidad, precio_unit)
VALUES (1, (SELECT MIN(id_venta) FROM venta), 100, 2, 1200);

INSERT INTO detalle_venta (id_detalle, id_venta, id_producto, cantidad, precio_unit)
VALUES (2, (SELECT MIN(id_venta) FROM venta), 101, 1, 950);

INSERT INTO venta (id_vendedor, id_medio_pago, total)
VALUES (2, 2, NULL);

INSERT INTO detalle_venta (id_detalle, id_venta, id_producto, cantidad, precio_unit)
VALUES (3, (SELECT MAX(id_venta) FROM venta), 103, 3, 1100);

COMMIT;

------------------------------------------------------------------------
-- consultas de salida (informes)
------------------------------------------------------------------------


SELECT
  e.id_empleado AS "IDENTIFICADOR",
  e.nombre || ' ' || e.apellido_p || ' ' || NVL(e.apellido_m,'') AS "NOMBRE COMPLETO",
  e.sueldo_base AS "SALARIO",
  e.bono_jefatura AS "BONIFICACION",
  (e.sueldo_base + e.bono_jefatura) AS "SALARIO SIMULADO"
FROM empleado e
WHERE e.activo = 'S'
  AND e.bono_jefatura IS NOT NULL
ORDER BY "SALARIO SIMULADO" DESC, e.apellido_p DESC;

SELECT
  e.nombre || ' ' || e.apellido_p || ' ' || NVL(e.apellido_m,'') AS "EMPLEADO",
  e.sueldo_base AS "SUELDO",
  0.08 AS "POSIBLE AUMENTO",
  (e.sueldo_base * (1 + 0.08)) AS "SALARIO SIMULADO"
FROM empleado e
WHERE e.sueldo_base BETWEEN 550000 AND 800000
ORDER BY e.sueldo_base ASC;
